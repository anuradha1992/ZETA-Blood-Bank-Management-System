/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BloodReturn.java
 *
 * Created on Sep 7, 2014, 6:20:33 PM
 */
package gui.Anu;

import controller.anu.BloodPacketDA;
import controller.anu.BulkIssueController;
import controller.anu.IssueController;
import controller.anu.ReturnedLogController;
import idgenerator.IDGenerator;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ReturnedLog;

/**
 *
 * @author Anuradha
 */
public class BloodReturn extends javax.swing.JInternalFrame {

    ResultSet rst = null;

    String[] title = {"Unit No", "Blood group", "Blood Type", "IssuedTo", "Issue mode", "IssuedID", "Issued Date", "Issued Time", "Reason for return"};
    DefaultTableModel dtm = new DefaultTableModel(title, 0);

    /**
     * Creates new form BloodReturn
     */
    public BloodReturn() {

        initComponents();
        initPacketIDCombo(packetIDCombo);
        initPacketIDCombo(searchPacketIDCombo);

    }

    private void clear() {
        reasonTxt.setText("");
    }

    private void initPacketIDCombo(JComboBox combo) {
        combo.removeAllItems();
        try {
            rst = BloodPacketDA.getAllIssuedBloodPackets();
            while (rst.next()) {
                combo.addItem(rst.getString("packetID"));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        packetIDCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        bloodGroupTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bloodTypeTxt = new javax.swing.JTextField();
        returnedDateCalendar = new com.toedter.calendar.JCalendar();
        jLabel6 = new javax.swing.JLabel();
        reasonTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        issueDateText = new javax.swing.JTextField();
        issueIDText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        timeText = new javax.swing.JTextField();
        patientIssueCheckBox = new javax.swing.JCheckBox();
        bulkIssueCheckBox = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        issuedToText = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        returnedTable = new javax.swing.JTable();
        markAsReturnedBtn = new javax.swing.JButton();
        removeResultBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        searchPacketIDCombo = new javax.swing.JComboBox();
        editBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        searchBloodGroupTxt = new javax.swing.JTextField();
        updateRecordBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        searchBloodTypeTxt = new javax.swing.JTextField();
        searchReturnedDateCalendar = new com.toedter.calendar.JCalendar();
        jLabel10 = new javax.swing.JLabel();
        searchReasonTxt = new javax.swing.JTextField();
        unmarkReturnBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        recievedQtyText2 = new javax.swing.JTextField();
        searchIssueIDTxt = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();

        jTabbedPane3.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N

        jPanel11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 255, 255), new java.awt.Color(0, 0, 255), new java.awt.Color(153, 255, 255), new java.awt.Color(0, 102, 255)));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Mark returned packet"));

        jLabel1.setText("Packet ID");

        jLabel3.setText("Issue ID");

        packetIDCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packetIDComboActionPerformed(evt);
            }
        });

        jLabel4.setText("Blood Group");

        bloodGroupTxt.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        bloodGroupTxt.setEnabled(false);
        bloodGroupTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodGroupTxtActionPerformed(evt);
            }
        });

        jLabel5.setText("Blood Type");

        bloodTypeTxt.setForeground(new java.awt.Color(255, 255, 255));
        bloodTypeTxt.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        bloodTypeTxt.setEnabled(false);
        bloodTypeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodTypeTxtActionPerformed(evt);
            }
        });

        returnedDateCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                returnedDateCalendarPropertyChange(evt);
            }
        });

        jLabel6.setText("Reason");

        reasonTxt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        reasonTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reasonTxtActionPerformed(evt);
            }
        });

        jLabel12.setText("Issued Date");

        issueDateText.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        issueDateText.setEnabled(false);
        issueDateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueDateTextActionPerformed(evt);
            }
        });

        issueIDText.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        issueIDText.setEnabled(false);
        issueIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueIDTextActionPerformed(evt);
            }
        });

        jButton1.setText("Add to list");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Issued Time");

        timeText.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        timeText.setEnabled(false);
        timeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeTextActionPerformed(evt);
            }
        });

        patientIssueCheckBox.setText("Patient Issue");
        patientIssueCheckBox.setEnabled(false);

        bulkIssueCheckBox.setText("Bulk Issue");
        bulkIssueCheckBox.setEnabled(false);

        jLabel15.setText("Issued To");

        issuedToText.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        issuedToText.setEnabled(false);
        issuedToText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issuedToTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(4, 4, 4)))
                            .addGap(32, 32, 32)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(reasonTxt)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(bloodGroupTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(bloodTypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(packetIDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(patientIssueCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(bulkIssueCheckBox))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(issueIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(issuedToText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(issueDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(timeText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(returnedDateCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(returnedDateCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(packetIDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(issueIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bloodGroupTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(issuedToText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bloodTypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reasonTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(issueDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(timeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(patientIssueCheckBox)
                                .addComponent(bulkIssueCheckBox)))))
                .addGap(42, 42, 42))
        );

        jLabel51.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jLabel51.setText("Add Returned Packet");

        returnedTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 255, 255), new java.awt.Color(0, 0, 255), new java.awt.Color(153, 255, 255), new java.awt.Color(0, 102, 255)));
        returnedTable.setModel(dtm);
        jScrollPane1.setViewportView(returnedTable);

        markAsReturnedBtn.setText("Mark as returned");
        markAsReturnedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markAsReturnedBtnActionPerformed(evt);
            }
        });

        removeResultBtn.setText("Remove from list");
        removeResultBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeResultBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(332, 332, 332))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(removeResultBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(markAsReturnedBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(markAsReturnedBtn)
                    .addComponent(removeResultBtn))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Returned Packets", jPanel11);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 255, 255), new java.awt.Color(0, 0, 255), new java.awt.Color(153, 255, 255), new java.awt.Color(0, 102, 255)));

        jLabel11.setText("Packet ID");

        searchPacketIDCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPacketIDComboActionPerformed(evt);
            }
        });
        searchPacketIDCombo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                searchPacketIDComboPropertyChange(evt);
            }
        });

        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Packet Details"));

        jLabel7.setText("Issue ID");

        jLabel8.setText("Blood Group");

        searchBloodGroupTxt.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        searchBloodGroupTxt.setEnabled(false);
        searchBloodGroupTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBloodGroupTxtActionPerformed(evt);
            }
        });

        updateRecordBtn.setText("Update Record");
        updateRecordBtn.setEnabled(false);
        updateRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRecordBtnActionPerformed(evt);
            }
        });

        jLabel9.setText("Blood Type");

        searchBloodTypeTxt.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        searchBloodTypeTxt.setEnabled(false);
        searchBloodTypeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBloodTypeTxtActionPerformed(evt);
            }
        });

        searchReturnedDateCalendar.setForeground(new java.awt.Color(255, 0, 0));
        searchReturnedDateCalendar.setEnabled(false);
        searchReturnedDateCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                searchReturnedDateCalendarPropertyChange(evt);
            }
        });

        jLabel10.setText("Reason");

        searchReasonTxt.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        searchReasonTxt.setEnabled(false);
        searchReasonTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchReasonTxtActionPerformed(evt);
            }
        });

        unmarkReturnBtn.setText("Unmark Return");
        unmarkReturnBtn.setEnabled(false);
        unmarkReturnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unmarkReturnBtnActionPerformed(evt);
            }
        });

        jLabel13.setText("Issued Date");

        recievedQtyText2.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        recievedQtyText2.setEnabled(false);
        recievedQtyText2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recievedQtyText2ActionPerformed(evt);
            }
        });

        searchIssueIDTxt.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        searchIssueIDTxt.setEnabled(false);
        searchIssueIDTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIssueIDTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(219, 219, 219))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(searchReasonTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                                                .addComponent(searchBloodTypeTxt)
                                                .addComponent(searchIssueIDTxt)
                                                .addComponent(recievedQtyText2))
                                            .addComponent(searchBloodGroupTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(updateRecordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)))
                        .addComponent(searchReturnedDateCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(unmarkReturnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchIssueIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(recievedQtyText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchBloodGroupTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBloodTypeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchReasonTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(searchReturnedDateCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unmarkReturnBtn)
                            .addComponent(updateRecordBtn))
                        .addGap(12, 12, 12))))
        );

        jLabel52.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jLabel52.setText("Search/Update Blood Packet");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(searchPacketIDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(320, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(278, 278, 278))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(searchPacketIDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Search/Update Returned Blood Packet", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void packetIDComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packetIDComboActionPerformed

        ResultSet rst;
        try {
            rst = BloodPacketDA.getIssuedPacketDetails("" + packetIDCombo.getSelectedItem());
            while (rst.next()) {
                bloodGroupTxt.setText(rst.getString("bloodGroup"));
                bloodTypeTxt.setText(rst.getString("bloodType"));
                String patientIssueId = rst.getString("PatientIssueID");
                String bulkIssueId = rst.getString("BulkIssueID");
                if (bulkIssueId != null) {
                    issueIDText.setText(bulkIssueId);
                    patientIssueCheckBox.setSelected(false);
                    bulkIssueCheckBox.setSelected(true);
                    String issuedTo = BulkIssueController.getIssuedTo(bulkIssueId);
                    if (issuedTo != null) {
                        issuedToText.setText(issuedTo);
                    }
                } else {
                    issueIDText.setText(patientIssueId);
                    patientIssueCheckBox.setSelected(true);
                    bulkIssueCheckBox.setSelected(false);
                    String issuedTo = IssueController.getIssuedTo(patientIssueId);
                    if (issuedTo != null) {
                        issuedToText.setText(issuedTo);
                    }
                }

                issueDateText.setText("" + rst.getDate("Date"));
                timeText.setText("" + rst.getTime("Time"));
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        }


}//GEN-LAST:event_packetIDComboActionPerformed

    private void bloodGroupTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodGroupTxtActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_bloodGroupTxtActionPerformed

    private void markAsReturnedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markAsReturnedBtnActionPerformed
        try {
            for (int i = 0; i < dtm.getRowCount(); i++) {
                String returnID = "";
                ResultSet rst;

                rst = ReturnedLogController.getResultIDs();
                rst.last();
                String curID = null;
                try {
                    curID = rst.getString("returnedID");
                    try {
                        returnID = IDGenerator.generateNextID(curID);
                    } catch (Exception ex) {
                        Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (SQLException e) {
                    returnID = "RET0000001";
                }

                java.util.Date returnedDate = returnedDateCalendar.getDate();
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                String dateReturned = df.format(returnedDate);
                java.sql.Date sqlRetunedDate = new java.sql.Date(returnedDate.getTime());

                //{packetID, bloodGroup, bloodType, issuedTo,issueMode, issueID, issueDate, issueTime, reason};
                String packetID = "" + dtm.getValueAt(i, 0);
                String reason = "" + dtm.getValueAt(i, 8);

                String patientIssueID = null;
                String bulkIssueID = null;

                ReturnedLog log = new ReturnedLog(returnID, sqlRetunedDate, packetID, reason, patientIssueID, bulkIssueID);

                if (("" + dtm.getValueAt(i, 4)).equalsIgnoreCase("To patient")) {
                    patientIssueID = "" + dtm.getValueAt(i, 5);
                    log.setPatientIssueID(patientIssueID);
                } else {
                    bulkIssueID = "" + dtm.getValueAt(i, 5);
                    log.setBulkIssueID(bulkIssueID);
                }

                int res1 = 0;
                int res2 = 0;

                res1 = ReturnedLogController.addReturnedLog(log);
                if (res1 == 1) {
                    res2 = BloodPacketDA.markReturnedPacket(packetID, returnID);
                    if (res2 == 1) {
                        JOptionPane.showMessageDialog(null, "Added Succesfully");
                        initPacketIDCombo(packetIDCombo);
                        initPacketIDCombo(searchPacketIDCombo);
                        
                    } else {
                        JOptionPane.showMessageDialog(null, "Error!");

                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Error!");

                }

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_markAsReturnedBtnActionPerformed

    private void returnedDateCalendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_returnedDateCalendarPropertyChange
        //setRecievedTableItems();
}//GEN-LAST:event_returnedDateCalendarPropertyChange

    private void reasonTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reasonTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reasonTxtActionPerformed

    private void searchPacketIDComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPacketIDComboActionPerformed
        ResultSet rstBloodPacket;
        ResultSet rstReturnedLog;
        String packetID = "" + searchPacketIDCombo.getSelectedItem();
        try {
            rstBloodPacket = BloodPacketDA.getPacketDetails(packetID);
            rstReturnedLog = ReturnedLogController.getReturnedLog(packetID);
            //rstReturnedLog.last();
            while (rstBloodPacket.next()) {
                searchBloodGroupTxt.setText(rstBloodPacket.getString("bloodGroup"));
                searchBloodTypeTxt.setText(rstBloodPacket.getString("bloodType"));
            }
            if (rstReturnedLog.last() == true) {
                searchReasonTxt.setText(rstReturnedLog.getString("Reason"));
                java.sql.Date sqlDate = rstReturnedLog.getDate("ReturnedDate");
                java.util.Date utilDate = new java.util.Date(sqlDate.getTime());
                searchReturnedDateCalendar.setDate(utilDate);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchPacketIDComboActionPerformed

    private void searchBloodGroupTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBloodGroupTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBloodGroupTxtActionPerformed

    private void updateRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRecordBtnActionPerformed
        String packetID = "" + searchPacketIDCombo.getSelectedItem();
        String returnID = "";

        ResultSet rst;
        try {
            rst = ReturnedLogController.getReturnedLog(packetID);
            if (rst.last() == true) {
                System.out.println("Came");
                returnID = rst.getString("returnedID");
            }
            System.out.println("Return ID " + returnID);

            java.util.Date returnedDate = searchReturnedDateCalendar.getDate();
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String dateReturned = df.format(returnedDate);
            java.sql.Date sqlRetunedDate = new java.sql.Date(returnedDate.getTime());

            String reason = searchReasonTxt.getText();

            ReturnedLog log = new ReturnedLog(returnID, sqlRetunedDate, packetID, reason);

            int res1 = 0;

            res1 = ReturnedLogController.updateReturnedLog(log);

            if (res1 == 1) {
                JOptionPane.showMessageDialog(null, "Updated Succesfully");
                searchReasonTxt.setEnabled(false);
                searchReturnedDateCalendar.setEnabled(false);
                updateRecordBtn.setEnabled(false);
                unmarkReturnBtn.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Error!");
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BloodReturn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateRecordBtnActionPerformed

    private void searchBloodTypeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBloodTypeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBloodTypeTxtActionPerformed

    private void searchReturnedDateCalendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_searchReturnedDateCalendarPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_searchReturnedDateCalendarPropertyChange

    private void searchReasonTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchReasonTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchReasonTxtActionPerformed

    private void unmarkReturnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unmarkReturnBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unmarkReturnBtnActionPerformed

    private void issueDateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueDateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_issueDateTextActionPerformed

    private void issueIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_issueIDTextActionPerformed

    private void recievedQtyText2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recievedQtyText2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recievedQtyText2ActionPerformed

    private void searchIssueIDTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchIssueIDTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchIssueIDTxtActionPerformed

    private void searchPacketIDComboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_searchPacketIDComboPropertyChange

    }//GEN-LAST:event_searchPacketIDComboPropertyChange

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        searchReasonTxt.setEnabled(true);
        searchReturnedDateCalendar.setEnabled(true);
        updateRecordBtn.setEnabled(true);
        unmarkReturnBtn.setEnabled(true);
    }//GEN-LAST:event_editBtnActionPerformed

    private void bloodTypeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodTypeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodTypeTxtActionPerformed

    private void timeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeTextActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String packetID = "" + packetIDCombo.getSelectedItem();
        String bloodGroup = bloodGroupTxt.getText();
        String bloodType = bloodTypeTxt.getText();
        String issueID = issueIDText.getText();
        String issuedTo = issuedToText.getText();
        String issueMode;
        if (patientIssueCheckBox.isSelected()) {
            issueMode = "To patient";
        } else {
            issueMode = "Bulk";
        }
        String issueDate = issueDateText.getText();
        String issueTime = timeText.getText();
        String reason = reasonTxt.getText();

        String[] row = {packetID, bloodGroup, bloodType, issuedTo, issueMode, issueID, issueDate, issueTime, reason};
        dtm.addRow(row);
        packetIDCombo.removeItem(packetIDCombo.getSelectedItem());
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removeResultBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeResultBtnActionPerformed
        int row = returnedTable.getSelectedRow();

        if (row >= 0) {
            packetIDCombo.addItem(dtm.getValueAt(row, 0));
            dtm.removeRow(row);

        } else {
            JOptionPane.showMessageDialog(null, "Select a row");
        }
    }//GEN-LAST:event_removeResultBtnActionPerformed

    private void issuedToTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issuedToTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_issuedToTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bloodGroupTxt;
    private javax.swing.JTextField bloodTypeTxt;
    private javax.swing.JCheckBox bulkIssueCheckBox;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField issueDateText;
    private javax.swing.JTextField issueIDText;
    private javax.swing.JTextField issuedToText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JButton markAsReturnedBtn;
    private javax.swing.JComboBox packetIDCombo;
    private javax.swing.JCheckBox patientIssueCheckBox;
    private javax.swing.JTextField reasonTxt;
    private javax.swing.JTextField recievedQtyText2;
    private javax.swing.JButton removeResultBtn;
    private com.toedter.calendar.JCalendar returnedDateCalendar;
    private javax.swing.JTable returnedTable;
    private javax.swing.JTextField searchBloodGroupTxt;
    private javax.swing.JTextField searchBloodTypeTxt;
    private javax.swing.JTextField searchIssueIDTxt;
    private javax.swing.JComboBox searchPacketIDCombo;
    private javax.swing.JTextField searchReasonTxt;
    private com.toedter.calendar.JCalendar searchReturnedDateCalendar;
    private javax.swing.JTextField timeText;
    private javax.swing.JButton unmarkReturnBtn;
    private javax.swing.JButton updateRecordBtn;
    // End of variables declaration//GEN-END:variables

}
